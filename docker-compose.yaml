services:
  database:
    build:
      context: .
      dockerfile: ./docker/database/Dockerfile
    env_file:
      - .env
    environment:
      - POSTGRES_DB=pk
      - POSTGRES_USER=pk-admin
      - TZ=CET
    healthcheck:
      interval: 10s
      retries: 5
      test: [ "CMD-SHELL", "pg_isready -U pk-admin -d pk -p 6000" ]
      timeout: 5s
    ports:
      - "6000:6000"
    volumes:
      - postgresql:/var/lib/postgresql/data

  calendar-server:
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
    depends_on:
      database:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./apps/server
        - action: rebuild
          path: ./packages
    env_file:
      - .env
    environment:
      - PG_HOST=database
      - PG_PORT=6000
      - PG_USER=pk-admin # todo: change to pk-calendar-server
      - SCHEDULE_SERVICE_ON=true
      - TZ=CET
    healthcheck:
      interval: 10s
      retries: 3
      test: [ "CMD", "curl", "-f", "http://localhost:5000/v1/health" ]
      timeout: 5s
    ports:
      - "5000:5000"

  calendar-ui:
    build:
      context: .
      dockerfile: ./docker/ui/Dockerfile
    depends_on:
      database:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./apps/ui
        - action: rebuild
          path: ./packages
    env_file:
      - .env
    environment:
      - TZ=CET
    healthcheck:
      interval: 10s
      retries: 3
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      timeout: 5s
    ports:
      - "8080:8080"

volumes:
  postgresql:
